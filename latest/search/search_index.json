{
    "docs": [
        {
            "location": "/", 
            "text": "The TSVD documentation\n\n\n\n\nFunctions\n\n\n#\n\n\nTSVD.tsvd\n \n \nFunction\n.\n\n\ntsvd(A, nvals = 1; [maxiter, initvec, tolconv, tolreorth, debug])\n\n\n\n\nComputes the truncated singular value decomposition (TSVD) by Lanczos bidiagonalization of the operator \nA\n. The Lanczos vectors are partially orthogonalized as described in\n\n\nR. M. Larsen, \nLanczos bidiagonalization with partial reorthogonalization\n, Department of Computer Science, Aarhus University, Technical report, DAIMI PB-357, September 1998.\n\n\nPositional arguments:\n\n\n\n\nA\n: Anything that supports the in place update operations\n\n\n\n\nmul!(y::AbstractVector, A, x::AbstractVector, \u03b1::Number, \u03b2::Number)\n\n\n\n\nand\n\n\nmul!(y::AbstractVector, A::Adjoint, x::AbstractVector, \u03b1::Number, \u03b2::Number)\n\n\n\n\ncorresponding to the operations \ny := \u03b1*op(A)*x + \u03b2*y\n where \nop\n can be either the identity or the conjugate transpose of \nA\n. If the \ninitvec\n argument is not supplied then it is furthermore required that \nA\n supports \neltype\n and \nsize\n.\n\n\n\n\nnvals\n: The number of singular values and vectors to compute. Default is one (the largest).\n\n\n\n\nKeyword arguments:\n\n\n\n\nmaxiter\n: The maximum number of iterations of the Lanczos bidiagonalization. Default is 1000, but usually much fewer iterations are needed.\n\n\ninitvec\n: Initial \nU\n vector for the Lanczos procesdure. Default is a vector of Gaussian random variates. The \nlength\n and \neltype\n of the \ninitvec\n will control the size and element types of the basis vectors in \nU\n and \nV\n.\n\n\ntolconv\n: Relative convergence criterion for the singular values. Default is \nsqrt(eps(real(eltype(A))))\n.\n\n\ntolreorth\n: Absolute tolerance for the inner product of the Lanczos vectors as measured by the \u03c9 recurrence. Default is \nsqrt(eps(real(eltype(initvec))))\n. \n0.0\n and \nInf\n correspond to complete and no reorthogonalization respectively.\n\n\ndebug\n: Boolean flag for printing debug information\n\n\n\n\nOutput:\n\n\nThe output of the procesure it the truple tuple \n(U, s, V)\n\n\n\n\nU\n: \nsize(A, 1)\n times \nnvals\n matrix of left singular vectors.\n\n\ns\n: Vector of length \nnvals\n of the singular values of \nA\n.\n\n\nV\n: \nsize(A, 2)\n times \nnvals\n matrix of right singular vectors.\n\n\n\n\nExamples\n\n\njulia\n A = matrixdepot(\nLPnetlib/lp_osa_30\n, :r)\n4350\u00d7104374 SparseArrays.SparseMatrixCSC{Float64,Int64} with 604488 stored entries:\n  [1     ,      1]  =  1.0\n  [2     ,      2]  =  1.0\n  [3     ,      3]  =  1.0\n  [4     ,      4]  =  1.0\n  [5     ,      5]  =  1.0\n  [6     ,      6]  =  1.0\n  [7     ,      7]  =  1.0\n  [8     ,      8]  =  1.0\n  [9     ,      9]  =  1.0\n  \u22ee\n  [4343  , 104373]  =  1.0\n  [4348  , 104373]  =  1.0\n  [4349  , 104373]  =  4.5314\n  [4268  , 104374]  =  1.0\n  [4285  , 104374]  =  3.1707\n  [4319  , 104374]  =  3.1707\n  [4340  , 104374]  =  1.0\n  [4348  , 104374]  =  1.0\n  [4349  , 104374]  =  3.1707\n\njulia\n U, s, V = tsvd(A, 5);\n\njulia\n round.(s, digits=7)\n5-element Array{Float64,1}:\n 1365.8944098\n 1033.2125634\n  601.3524529\n  554.107656\n  506.0414587", 
            "title": "Home"
        }, 
        {
            "location": "/#the-tsvd-documentation", 
            "text": "", 
            "title": "The TSVD documentation"
        }, 
        {
            "location": "/#functions", 
            "text": "#  TSVD.tsvd     Function .  tsvd(A, nvals = 1; [maxiter, initvec, tolconv, tolreorth, debug])  Computes the truncated singular value decomposition (TSVD) by Lanczos bidiagonalization of the operator  A . The Lanczos vectors are partially orthogonalized as described in  R. M. Larsen,  Lanczos bidiagonalization with partial reorthogonalization , Department of Computer Science, Aarhus University, Technical report, DAIMI PB-357, September 1998.  Positional arguments:   A : Anything that supports the in place update operations   mul!(y::AbstractVector, A, x::AbstractVector, \u03b1::Number, \u03b2::Number)  and  mul!(y::AbstractVector, A::Adjoint, x::AbstractVector, \u03b1::Number, \u03b2::Number)  corresponding to the operations  y := \u03b1*op(A)*x + \u03b2*y  where  op  can be either the identity or the conjugate transpose of  A . If the  initvec  argument is not supplied then it is furthermore required that  A  supports  eltype  and  size .   nvals : The number of singular values and vectors to compute. Default is one (the largest).   Keyword arguments:   maxiter : The maximum number of iterations of the Lanczos bidiagonalization. Default is 1000, but usually much fewer iterations are needed.  initvec : Initial  U  vector for the Lanczos procesdure. Default is a vector of Gaussian random variates. The  length  and  eltype  of the  initvec  will control the size and element types of the basis vectors in  U  and  V .  tolconv : Relative convergence criterion for the singular values. Default is  sqrt(eps(real(eltype(A)))) .  tolreorth : Absolute tolerance for the inner product of the Lanczos vectors as measured by the \u03c9 recurrence. Default is  sqrt(eps(real(eltype(initvec)))) .  0.0  and  Inf  correspond to complete and no reorthogonalization respectively.  debug : Boolean flag for printing debug information   Output:  The output of the procesure it the truple tuple  (U, s, V)   U :  size(A, 1)  times  nvals  matrix of left singular vectors.  s : Vector of length  nvals  of the singular values of  A .  V :  size(A, 2)  times  nvals  matrix of right singular vectors.   Examples  julia  A = matrixdepot( LPnetlib/lp_osa_30 , :r)\n4350\u00d7104374 SparseArrays.SparseMatrixCSC{Float64,Int64} with 604488 stored entries:\n  [1     ,      1]  =  1.0\n  [2     ,      2]  =  1.0\n  [3     ,      3]  =  1.0\n  [4     ,      4]  =  1.0\n  [5     ,      5]  =  1.0\n  [6     ,      6]  =  1.0\n  [7     ,      7]  =  1.0\n  [8     ,      8]  =  1.0\n  [9     ,      9]  =  1.0\n  \u22ee\n  [4343  , 104373]  =  1.0\n  [4348  , 104373]  =  1.0\n  [4349  , 104373]  =  4.5314\n  [4268  , 104374]  =  1.0\n  [4285  , 104374]  =  3.1707\n  [4319  , 104374]  =  3.1707\n  [4340  , 104374]  =  1.0\n  [4348  , 104374]  =  1.0\n  [4349  , 104374]  =  3.1707\n\njulia  U, s, V = tsvd(A, 5);\n\njulia  round.(s, digits=7)\n5-element Array{Float64,1}:\n 1365.8944098\n 1033.2125634\n  601.3524529\n  554.107656\n  506.0414587", 
            "title": "Functions"
        }
    ]
}